services:
  biblio.ui:
    image: domlan/biblio:2.0531    
    environment:      
      - ASPNETCORE_ENVIRONMENT=Staging
      - ASPNETCORE_HTTP_PORTS=8081      
      - BIBLIO_POSTGRES_CONNECTIONSTRING=Host=postgres;Port=5432;Database=${POSTGRES_DBNAME};Username=${POSTGRES_USERNAME};Password=${POSTGRES_PASSWORD};
      - BIBLIO_MONGODB_CONNECTIONSTRING=mongodb://${MONGODB_USERNAME}:${MONGODB_PASSWORD}@mongodb:27017/?retryWrites=true&w=majority
      - BIBLIO_CACHE_CONNECTIONSTRING=cache:6379,password=${CACHE_PASSWORD},defaultDatabase=${CACHE_DB},ssl=false,connectTimeout=10000,connectRetry=2
      - BIBLIO_RABBITMQ_CONNECTIONSTRING=amqp://${RABBITMQ_USERNAME}:${RABBITMQ_PASSWORD}@${RABBITMQ_HOST}:${RABBITMQ_PORT}/${RABBITMQ_VHOST}
    env_file:
      - .env
    ports:
      - 53478:8081
    networks:
      - shared-services-network
    volumes:
      - $HOME/.microsoft/usersecrets:/app/.microsoft/usersecrets:ro
      - $HOME/.aspnet/https:/https:ro
      - shared-temp:/tmp
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy      
      mongodb:     
        condition: service_healthy       

  biblio-deeplearning:
    image: domlan/biblio-deeplearning:2.0531
    env_file:
      - .env
    ports:
      - 53480:8082
    networks:
      - shared-services-network
    volumes: 
      - shared-temp:/tmp  
    depends_on:
      - postgres     

  biblio-ocr:
    image: domlan/biblio-ocr:2.0531
    env_file:
      - .env
    networks:
      - shared-services-network
    volumes: 
      - shared-temp:/tmp  
    depends_on:
      - postgres    
  
  postgres:
    image: postgres:14.5-alpine
    env_file:
      - .env
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USERNAME} -d ${POSTGRES_DBNAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - shared-services-network
    volumes:
      - pgdata:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USERNAME}
      - POSTGRES_DB=${POSTGRES_DBNAME}

  mongodb:
    image: mongo:8.0.3-noble
    restart: always
    env_file:
      - .env
    ports:
      - 27017:27017
    healthcheck:
      test: ["CMD", "mongo", "--quiet", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5      
    networks:
      - shared-services-network
    volumes:
      - dbdata7:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGODB_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGODB_PASSWORD}

  cache:
    image: redis:8.0-M03-alpine3.21
    restart: always
    env_file:
      - .env
    ports:
      - 6379:6379
    networks:
      - shared-services-network
    volumes:
      - redisdata:/root/redis
      - redisdata:/usr/local/etc/redis/redis.conf
    environment:
      - REDIS_PASSWORD=${CACHE_PASSWORD}
      - REDIS_PORT=6379
      - REDIS_DATABASES=${CACHE_DB}

  rabbitmq:
    image: rabbitmq:3.13-management-alpine
    # container_name: rabbitmq
    restart: always
    ports:
      - 5672:5672
      - 15672:15672
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - shared-services-network
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USERNAME}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD}
      - RABBITMQ_DEFAULT_VHOST=${RABBITMQ_VHOST}
    configs:
      - source: rabbitmq-plugins
        target: /etc/rabbitmq/enabled_plugins
    volumes:
      - rabbitmq-lib:/var/lib/rabbitmq/
      - rabbitmq-log:/var/log/rabbitmq

configs:
  rabbitmq-plugins:
    content: "[rabbitmq_management]."            

networks:
  shared-services-network:
    driver: bridge  

volumes:
  pgdata:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: ${PATH_BIBLIO_DATA_POSTGRES}
  dbdata7:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: ${PATH_BIBLIO_DATA_MONGO}
  redisdata:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: ${PATH_BIBLIO_DATA_REDIS}
  rabbitmq-lib:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: ${PATH_BIBLIO_DATA_LIB_RABBITMQ}
  rabbitmq-log:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: ${PATH_BIBLIO_DATA_LOG_RABBITMQ}
  shared-temp:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: ${PATH_BIBLIO_TEMP}