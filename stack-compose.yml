version: "3.9"

services:
  biblio-ui:
    image: domlan/biblio:2.0626
    environment:
      - ASPNETCORE_ENVIRONMENT=Staging
      - ASPNETCORE_HTTP_PORTS=8081
      - BIBLIO_POSTGRES_CONNECTIONSTRING=Host=postgres;Port=5432;Database=citizix_db;Username=citizix_user;Password=Gc6hf0hIcQ8MWNN
      - BIBLIO_MONGODB_CONNECTIONSTRING=mongodb://root:Hh5Ad2Nvmp4EVRu@mongodb:27017/?retryWrites=true&w=majority
      - BIBLIO_CACHE_CONNECTIONSTRING=cache:6379,password=jYt1UYmv0GGtaTu,defaultDatabase=12,ssl=false,connectTimeout=1000,connectRetry=2
      - BIBLIO_RABBITMQ_CONNECTIONSTRING=amqp://${RABBITMQ_USERNAME}:${RABBITMQ_PASSWORD}@${RABBITMQ_HOST}:${RABBITMQ_PORT}/${RABBITMQ_VHOST}
    env_file:
      - .env
    ports:
      - 53478:8081
    networks:
      - shared-services-network
    volumes:
      - shared-temp:/tmp
    deploy:
      placement:
        constraints:
          - node.role == worker
    depends_on:
      - postgres
      - mongodb

  biblio-deeplearning:
    image: domlan/biblio-deeplearning:2.0626
    env_file:
      - .env
    ports:
      - 53480:8082
    networks:
      - shared-services-network
    volumes:
      - shared-temp:/tmp
    deploy:
      placement:
        constraints:
          - node.role == worker
    depends_on:
      - postgres

  biblio-ocr:
    image: domlan/biblio-ocr:2.0626
    env_file:
      - .env
    networks:
      - shared-services-network
    volumes:
      - shared-temp:/tmp  
    deploy:
      placement:
        constraints:
          - node.role == worker
    depends_on:
      - postgres

  postgres:
    image: postgres:14.5-alpine
    env_file:
      - .env
    ports:
      - 5432:5432
    networks:
      - shared-services-network
    volumes:
      - pgdata:/var/lib/postgresql/data
    deploy:
      placement:
        constraints:
          - node.role == worker
    environment:
      - POSTGRES_PASSWORD=Gc6hf0hIcQ8MWNN
      - POSTGRES_USER=citizix_user
      - POSTGRES_DB=citizix_db

  mongodb:
    image: mongo:8.0.3-noble
    env_file:
      - .env
    ports:
      - 27017:27017
    networks:
      - shared-services-network
    volumes:
      - dbdata7:/data/db
    deploy:
      placement:
        constraints:
          - node.role == worker
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=Hh5Ad2Nvmp4EVRu

  cache:
    image: redis:8.0-M03-alpine3.21
    env_file:
      - .env
    ports:
      - 6379:6379
    networks:
      - shared-services-network
    volumes:
      - redisdata:/root/redis
      - redisdata:/usr/local/etc/redis/redis.conf
    deploy:
      placement:
        constraints:
          - node.role == worker
    environment:
      - REDIS_PASSWORD=jYt1UYmv0GGtaTu
      - REDIS_PORT=6379
      - REDIS_DATABASES=12

  rabbitmq:
    image: rabbitmq:3.13-management-alpine
    ports:
      - 5672:5672
      - 15672:15672
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - shared-services-network
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USERNAME}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD}
      - RABBITMQ_DEFAULT_VHOST=${RABBITMQ_VHOST}
    configs:
      - source: rabbitmq-plugins
        target: /etc/rabbitmq/enabled_plugins
        mode: 0444
    volumes:
      - rabbitmq-lib:/var/lib/rabbitmq/
      - rabbitmq-log:/var/log/rabbitmq
    deploy:
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
        window: 30s
      placement:
        constraints:
          - node.role == worker

configs:
  rabbitmq-plugins:
    file: ./rabbitmq/enabled_plugins

networks:
  shared-services-network:
    driver: overlay
    attachable: true

volumes:
  pgdata:
    name: pgdata
  dbdata7:
    name: dbdata7
  redisdata:
    name: redisdata
  shared-temp:
    name: shared-temp
  rabbitmq-lib:
    name: rabbitmq-lib
  rabbitmq-log:
    name: rabbitmq-log